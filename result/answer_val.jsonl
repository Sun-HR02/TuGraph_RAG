{"id": "VAL-1", "output_field": "三个级别（0，1，2）。"}
{"id": "VAL-2", "output_field": "当磁盘IO超过10000时会触发危急颜色模式。"}
{"id": "VAL-3", "output_field": "`IsReal()` 函数用于查询数据类型是否为实数类型（如FLOAT或DOUBLE）。"}
{"id": "VAL-4", "output_field": "200"}
{"id": "VAL-5", "output_field": "边关联的两个点的字段，不一定是点的主键。"}
{"id": "VAL-6", "output_field": "OutEdgeIterator 类的 Delete 方法执行的操作是删除当前迭代器指向的边。"}
{"id": "VAL-7", "output_field": "在 TuGraph-DB 中，调整日志等级的具体步骤未在提供的文本中明确列出，但通常日志等级的设置可以通过配置文件进行调整。在配置文件中，可能会有相关的参数用于设置日志等级。具体的参数及其取值需参考官方文档或配置参数说明。"}
{"id": "VAL-8", "output_field": "“memory”是指服务器的内存使用情况，包括图数据库应用程序内存使用量（self）、服务器可用内存（server_avail）、服务器总内存（server_total），其单位为KB。"}
{"id": "VAL-9", "output_field": "每次执行查询的结果会追加至画布区域。"}
{"id": "VAL-10", "output_field": "可以通过发送邮件至 tugraph@service.alipay.com 提出关于 TuGraph 产品的建议。"}
{"id": "VAL-11", "output_field": "边索引支持查询加速。"}
{"id": "VAL-12", "output_field": "TuGraph Monitor的主要功能是通过与TuGraph通信，查询服务性能指标并将结果转换为Prometheus所需的数据模型，以实现运维监控。"}
{"id": "VAL-13", "output_field": "TuGraph HA 集群的管理工具是 `lgraph_peer`。"}
{"id": "VAL-14", "output_field": "将Token的有效期修改为无限期的方法如下：\n\n通过POST请求到 `/update_token_time`，请求体中的 `refresh_time` 和 `expire_time`均设置为0。\n\n示例请求体：\n```json\n{\n  \"Authorization\": \"Bearer your_token_here\",\n  \"refresh_time\": 0,\n  \"expire_time\": 0\n}\n```\n\n如果成功，返回状态码为200。"}
{"id": "VAL-15", "output_field": "蚂蚁集团与清华大学。"}
{"id": "VAL-16", "output_field": "TuGraph图学习模块依赖于TuGraph-db 3.5.1及以上版本。"}
{"id": "VAL-17", "output_field": "构造FieldSpec时需要的参数是：`field_name`、`field_type`、`optional`（可选，只有在字段是可选时指定为true）。"}
{"id": "VAL-18", "output_field": "主要问题是Antlr4 C++ target的并发性能不足，无法支持所需的超高并发GQL请求。"}
{"id": "VAL-19", "output_field": "三个参数（url, user, password）。"}
{"id": "VAL-20", "output_field": "TuGraph-DB目前支持Cypher查询语言，未来计划支持ISO GQL。"}
{"id": "VAL-21", "output_field": "DeleteProcedure 函数接受三个参数，分别为：procedureType（类型：字符串），procedureName（类型：字符串），graph（类型：字符串）。"}
{"id": "VAL-22", "output_field": "TRAVERSAL_PARALLEL 模式必须被选用。"}
{"id": "VAL-23", "output_field": "RpcSingleClient 构造函数需要的参数是 client_version 和 token。"}
{"id": "VAL-24", "output_field": "默认情况下，TuGraph中的expire_time设置为24小时（86400秒）。"}
{"id": "VAL-25", "output_field": "四种采样算子是：Neighbor Sampling、Edge Sampling、Random Walk Sampling 和 Negative Sampling。"}
{"id": "VAL-26", "output_field": "如果在执行UpsertEdge操作时，根据提供的参数检查现有边，如果该边不存在则插入，若存在则更新该边的属性，返回值将是：200。"}
{"id": "VAL-27", "output_field": "ANTLR4支持生成Java、Cpp等目标语言的解析器。"}
{"id": "VAL-28", "output_field": "如果对DateTime对象添加超出其范围的微秒数，将会导致溢出错误。"}
{"id": "VAL-29", "output_field": "VertexLockGuard是一个用于管理点加锁的类。它在对特定点（vid）进行操作时，加锁该点，并在对象退出作用域时自动释放锁。这有助于避免因忘记释放锁而导致的死锁问题。"}
{"id": "VAL-30", "output_field": "null array在value pack时的具体含义是：标记schema的field是否为空，如果一个schema的field为空，并且插入的数据里对应的列是空的，在packed的时候就不占内存。"}
{"id": "VAL-31", "output_field": "TuGraph目前不支持在Cypher中直接过滤边属性。这项功能正在开发中，你可以先对查询结果进行遍历和手动过滤。"}
{"id": "VAL-32", "output_field": "在TuGraph中，通过创建Label来定义点类型和边类型。每种Label都有自己的数据格式，只有创建了Label，才能在图中插入相应类型的点或者边。可以使用POST请求向指定图的标签接口添加Label，以定义对应的数据类型。"}
{"id": "VAL-33", "output_field": "如果`log_dir`不设置，则所有日志会输出到控制台；若在守护进程模式下`log_dir`为空则不会向控制台输出任何日志。"}
{"id": "VAL-34", "output_field": "调用算法 `algo.shortestPath` 实际应用中的例子是查询两个节点之间的最短路径。示例代码如下：\n\n```cypher\nMATCH (n1 {name:'Hugo Weaving'}),(n2 {title:'The Matrix'})\nCALL algo.shortestPath(n1,n2) YIELD nodeCount,totalCost RETURN nodeCount,totalCost\n```\n\n这个查询将返回节点数量和总代价。"}
{"id": "VAL-35", "output_field": "字典类型的结果。"}
{"id": "VAL-36", "output_field": "Rust 存储过程目前仅支持v1版本。"}
{"id": "VAL-37", "output_field": "TuGraph单元测试使用的测试框架是gtest。"}
{"id": "VAL-38", "output_field": "是的，在创建 Label 的请求中需要指定该 Label 是点（vertex）还是边（relationship）。"}
{"id": "VAL-39", "output_field": "简单图分析操作和复杂图分析操作。"}
{"id": "VAL-40", "output_field": "使用 C++ 添加日志输出埋点时，可以使用以下方式：\n\n1. 包含日志依赖：\n```cpp\n#include \"tools/lgraph_log.h\"\n```\n\n2. 在存储过程代码中调用日志函数，例如：\n```cpp\nextern \"C\" bool Process(GraphDB& db, const std::string& request, std::string& response) {\n    response = \"TuGraph log demo\";\n    LOG(INFO) << \"Log message here\";  // 添加日志输出\n    return true;\n}\n```\n\n通过上述步骤，您可以在 TuGraph-DB 的存储过程中增加日志输出。"}
{"id": "VAL-41", "output_field": "抛出 `FTIndexException` 异常。"}
{"id": "VAL-42", "output_field": "Grafana主要用于运维监控。"}
{"id": "VAL-43", "output_field": "删除存储过程。"}
{"id": "VAL-44", "output_field": "钥匙生成形式为：先复制原始键，然后依次写入源顶点ID（src_vid）和目标顶点ID（end_vid）。"}
{"id": "VAL-45", "output_field": "类FieldData用于表示三种类型的数据：标量（SCALAR）、数组（ARRAY）和映射（MAP）。"}
{"id": "VAL-46", "output_field": "如果发生数据包错误，默认行为是导入将在第一个错误包处停止，并打印出已导入的包数。"}
{"id": "VAL-47", "output_field": "`ORDER BY`在GQL中用于对输出的结果进行排序。"}
{"id": "VAL-48", "output_field": "TuGraph-DB支持HTTP接口，具体接口代码可以在官方文档中找到。"}
{"id": "VAL-49", "output_field": "lgraph_peer工具并不是只有编译方式部署后才有。"}
{"id": "VAL-50", "output_field": "图数据库应用程序的 CPU 使用率为 25%。"}
