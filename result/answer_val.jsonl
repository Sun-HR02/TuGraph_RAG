{"id": "VAL-1", "output_field": "三个级别（0，1，2，3）。"}
{"id": "VAL-2", "output_field": "当值大于10000时会触发危急颜色模式。"}
{"id": "VAL-3", "output_field": "是的，`FieldData` 类中的函数 `IsReal()` 是用来查询数据是否为实数类型。"}
{"id": "VAL-4", "output_field": "200"}
{"id": "VAL-5", "output_field": "边关联的两个点的字段不一定是点的主键。尽管在边的 upsert 操作中需要指定起点和终点的主键字段值，但这并不意味着这些字段必须是主键。"}
{"id": "VAL-6", "output_field": "删除当前边，并将迭代器指向下一个出边（如果存在）。"}
{"id": "VAL-7", "output_field": "要调整TuGraph-DB的日志等级，可以通过修改配置文件中的相应参数来进行设置。具体的参数说明可以参考数据库的运行和服务配置文档。"}
{"id": "VAL-8", "output_field": "“memory”指的是计算机系统中的内存资源，用于存储和处理数据。"}
{"id": "VAL-9", "output_field": "导入的数据会追加至画布区域，而不会覆盖或清空已有的数据。"}
{"id": "VAL-10", "output_field": "您可以通过在 TuGraph 的 GitHub 上提交一个 issue 提出建议。"}
{"id": "VAL-11", "output_field": "是的，边索引支持查询加速。"}
{"id": "VAL-12", "output_field": "TuGraph Monitor的主要功能是通过C++ RPC Client与TuGraph进行通信，查询TuGraph服务所在机器的性能指标，并将结果包装成Prometheus需要的数据模型，以便进行运维监控。"}
{"id": "VAL-13", "output_field": "TuGraph HA 集群的管理工具是 `lgraph_peer`。"}
{"id": "VAL-14", "output_field": "将Token有效期修改为无限期，可以通过以下POST请求实现：\n\n```plaintext\nPOST http://localhost:7070/update_token_time\nHeaders:\nAccept: application/json; charset=UTF-8\nContent-Type: application/json; charset=UTF-8\nBody:\n{\n  \"Authorization\": \"Bearer your_token_here\",\n  \"refresh_time\": 0,\n  \"expire_time\": 0\n}\n```\n\n成功修改后，返回状态码：200。"}
{"id": "VAL-15", "output_field": "蚂蚁集团与清华大学。"}
{"id": "VAL-16", "output_field": "TuGraph图学习模块依赖于主要包括gcc、python、java等编译器的编译环境，以及gcc、boost、cmake等运行环境。"}
{"id": "VAL-17", "output_field": "在构造FieldSpec时需要以下参数：字段名称、字段类型、是否为主键、索引设置和字段描述。"}
{"id": "VAL-18", "output_field": "主要问题是并发性能不足，无法支持超高并发的 GQL 请求。"}
{"id": "VAL-19", "output_field": "需要三个参数：URL（如 \"127.0.0.1:19099\"）、用户名（如 \"admin\"）和密码（如 \"73@TuGraph\"）。"}
{"id": "VAL-20", "output_field": "TuGraph-DB查询引擎目前支持Cypher查询语言，未来计划支持ISO GQL。"}
{"id": "VAL-21", "output_field": "DeleteProcedure函数接受三种类型的参数，分别是：procedureType（存储过程类型），procedureName（存储过程名称），和graph（要查询的图）。"}
{"id": "VAL-22", "output_field": "必须选择事务模式 TRAVERSAL_PARALLEL。"}
{"id": "VAL-23", "output_field": "构造函数需要以下参数：`url`（字符串），`user`（字符串），`password`（字符串）。"}
{"id": "VAL-24", "output_field": "TuGraph中expire_time的默认设置为有限期（具体时间未提供）。"}
{"id": "VAL-25", "output_field": "四种采样算子是：Neighbor Sampling、Edge Sampling、Random Walk Sampling 和 Negative Sampling。"}
{"id": "VAL-26", "output_field": "执行UpsertEdge操作时，如果找到匹配项，返回更新后的边信息；如果没有找到匹配项，则创建新边并返回新边信息。"}
{"id": "VAL-27", "output_field": "ANTLR4支持生成的目标语言包括Java、Cpp等。"}
{"id": "VAL-28", "output_field": "超出范围的微秒数会导致抛出异常。"}
{"id": "VAL-29", "output_field": "VertexLockGuard 是一个用于在对点数据进行操作时自动加锁的机制。它在创建时对指定的点（通过点ID vid）加锁，并在退出作用域时自动释放锁，从而简化了锁的管理。"}
{"id": "VAL-30", "output_field": "在TuGraph中，null array表示一个空的数组，没有任何元素，但仍会被视为有效的数据结构。"}
{"id": "VAL-31", "output_field": "在TuGraph中，支持边属性匹配的方式是通过在查询中指定边的属性条件。你提到的Cypher查询 `MATCH (n:chunk {id: '21604c19-0d30-11ef-b83b-0242ac110005'})-[r:kw {name:\"生活补贴\"}]-(m)` 可能无法过滤边属性的原因有几个：\n\n1. 属性名称需要符合命名规则和大小写敏感性。\n2. 边的属性可能未在边上正确设置或命名，也就是边可能并不存在 `name` 这个属性。\n\n为了确保边属性能够正确匹配，需确认边 `r` 的属性 `name` 已正确设置，并且在查询中遵循大小写敏感的规范。如果这些都符合，边属性匹配应该能够正常工作。"}
{"id": "VAL-32", "output_field": "在TuGraph中，通过创建Label来定义点类型和边类型。每种Label对应一个预定义的数据格式，只有创建了相应的Label，才能在图中插入对应类型的点或边。"}
{"id": "VAL-33", "output_field": "如果不设置`log_dir`，则所有日志会输出到控制台，但在daemon模式下不会向console输出任何日志。"}
{"id": "VAL-34", "output_field": "在城市公共交通系统中，计算从一个地点到另一个地点的最短路径可以使用以下方式调用 `algo.shortestPath`：\n\n``` \nMATCH (startLocation {name:'地点A'}),(endLocation {name:'地点B'})\nCALL algo.shortestPath(startLocation, endLocation) YIELD nodeCount, totalCost \nRETURN nodeCount, totalCost \n``` \n\n这个查询将返回从地点A到地点B的最短路径的节点数量和总成本。"}
{"id": "VAL-35", "output_field": "返回类型为 `cypher::FieldData`。"}
{"id": "VAL-36", "output_field": "Rust存储过程目前仅支持v1版本的TuGraph。"}
{"id": "VAL-37", "output_field": "TuGraph使用gtest框架进行单元测试。"}
{"id": "VAL-38", "output_field": "是的，创建 Label 的请求需要指定该 Label 是用于点（vertex）还是边（relationship），通过 `is_vertex` 参数来区分。"}
{"id": "VAL-39", "output_field": "在 TuGraph 中使用的两种主要图分析操作是简单图分析操作（例如最短路径算法 SPSP）和复杂图分析操作（例如 PageRank 算法）。"}
{"id": "VAL-40", "output_field": "在代码中为TuGraph-DB增加日志输出埋点，可以使用存储过程示例中提供的代码片段。通过在存储过程中调用 `LogExample();` 函数或使用Python中的 `print` 语句来输出调试信息。这些信息将在日志文件中记录为相应的日志条目或合并为一条WARN等级的日志。"}
{"id": "VAL-41", "output_field": "抛出IOException异常。"}
{"id": "VAL-42", "output_field": "Grafana主要用于数据可视化和监控，通过支持多种数据源，帮助用户创建丰富的图表和仪表盘。"}
{"id": "VAL-43", "output_field": "删除存储过程。"}
{"id": "VAL-44", "output_field": "PairUniqueIndex 的钥匙生成形式是通过将原始键与源顶点 ID 和目标顶点 ID 进行拼接生成的。"}
{"id": "VAL-45", "output_field": "类FieldData用于表示图数据库中的字段数据类型，包括整数、浮点数、字符串、布尔值等。"}
{"id": "VAL-46", "output_field": "发生数据包错误时，默认行为是导入将在第一个错误包处停止，并打印出已导入的包数。"}
{"id": "VAL-47", "output_field": "`ORDER BY`在GQL中的作用是对输出的结果进行排序。"}
{"id": "VAL-48", "output_field": "TuGraph-DB提供HTTP接口，相关的接口代码可以在TuGraph的HTTP API文档中找到。"}
{"id": "VAL-49", "output_field": "lgraph_peer工具并不是只能通过编译方式部署后使用。"}
{"id": "VAL-50", "output_field": "图数据库应用程序的CPU使用率可以通过调用`GET http://localhost:7070/info/cpu`接口获取，返回时会显示在`self`字段中，单位为%。"}
