id,score,correct_answer,our_answer
VAL-1,1.0000039184205125,三个级别（0，1，2）。,三个级别（0，1，2）。
VAL-2,0.6427200765187858,value大于10000时。,"""当写速率大于10000时会触发危急颜色模式。"""
VAL-3,0.8350543059555782,`IsReal()` 用来查询是否是 `FLOAT` 或 `DOUBLE` 类型的数据。,`IsReal()` 函数用于查询数据类型是否为实数类型（即浮点数）。
VAL-4,0.6913122552268303,200,“200”
VAL-5,0.5021518099691665,是的,边关联的两个点的字段不一定是点的主键，可以根据边上的某个属性来确定唯一性。
VAL-6,0.7114674130148125,Deletes current edge. The iterator will point to the next out edge if there is any.,`OutEdgeIterator 类的 Delete 方法`用于删除指定的边。
VAL-7,0.7280766354054363,"单机模式下，调整配置文件src/server/lgraph_standalone.json，其中verbose配置项控制日志等级，verbose可以设置为0,1,2，对应日志等级可以参考src/server/lgraph_server.cpp中115行至128行。",调整TuGraph-DB的日志等级可通过配置文件中的相应参数来实现，具体步骤根据文档配置。
VAL-8,0.8075208812323597,“memory”是内存，是用于监控服务性能的重要指标之一。,“memory”指标通常指的是机器在执行任务时所占用的内存量。它反映了程序运行期间使用的RAM大小。
VAL-9,0.7102327872567012,每次执行查询的结果会追加至画布区域。,导入的数据会被追加到现有的画布数据中，而不是覆盖现有数据。
VAL-10,0.6696025644966968,邮件地址为tugraph@service.alipay.com。,通过邮件提出关于TuGraph产品的建议的步骤一般包括：撰写清晰的建议内容、提供反馈的联系邮箱，并附上你的联系方式。建议可直接发送至相关的客户支持邮箱或官方联系邮箱。
VAL-11,0.7040917920209827,暂不支持,不支持不定长边的过滤查询。
VAL-12,0.7155325495854002,TuGraph Monitor负责收集性能指标并将数据包装为Prometheus可以使用的格式。,TuGraph Monitor的主要功能是以可视化方式管理、维护和查看图数据，以及支持系统账户的管理。
VAL-13,0.6110213167003522,管理工具为lgraph_peer。,"""TuGraph Management。"""
VAL-14,0.611784793200036,通过设置refresh_time和expire_time参数均为0。,要通过POST方法修改Token的有效期为无限期，可以在请求中将`expire_time`参数设置为一个远超当前时间的值，例如将其设置为一个极大的时间戳，或特殊值表示无限期（如果支持）。具体实现可能需要查看API文档确认方法。
VAL-15,0.8199822567007862,蚂蚁集团与清华大学联合研发的。,"""蚂蚁集团和清华大学。"""
VAL-16,0.7364501235245768,它依赖于TuGraph的数据库管理系统。,"""TuGraph已安装""。"
VAL-17,0.5082518388201922,需要字段名称、字段类型和一个布尔值标识字段是否可选。,构造FieldSpec时需要的参数有：算法所需参数、算法名称以及配置类内的Print函数。
VAL-18,0.5244060957976875,Antlr4 C++ target的并发性能不足以支持所需的超高并发GQL请求。,“主要问题是关联数据爆炸性增长对图计算高效处理提出的迫切需求。”
VAL-19,0.5598614391456159,"需要url（如""127.0.0.1:19099""）、user（如""admin""）和password（如""73@TuGraph""）。","要在C++客户端中实例化单节点client对象，需要以下三个参数：  

1. `url`: 包含IP和端口的字符串，例如 ""127.0.0.1:19099""  
2. `user`: 登录用户名  
3. `pass`: 登录密码  "
VAL-20,0.9200664281253252,目前，TuGraph-DB支持使用Open Cypher作为查询语言，即将支持ISO GQL查询语言。,"""TuGraph-DB目前支持Cypher图查询语言，未来计划支持GQL查询语言。"""
VAL-21,0.7029904238245306,"接受 std::string &result, const std::string &procedure_type, const std::string &procedure_name, const std::string &graph。","""DeleteProcedure 函数接受三个类型的参数，分别是：procedureType（存储过程类型）、procedureName（存储过程名称）和graph（要查询的图）。"""
VAL-22,0.6691109442685393,事务必须是只读的。,"""事务的并行模式必须被选用。"""
VAL-23,0.664204291315223,"url, user, password。","""RpcSingleClient 构造函数需要三个参数：url（字符串）、user（字符串）及 password（字符串）。"""
VAL-24,0.7487733294688748,expire_time实体定义为强制过期时间戳，默认设置为24小时。,“expire_time”的默认设置是“无限期”，即不会过期。
VAL-25,0.647261020746395,Neighbor Sampling、Edge Sampling、Random Walk Sampling 和 Negative Sampling。,四种采样算子是：随机采样、邻居采样、层次采样和重要性采样。
VAL-26,0.7075189680403828,如果边已存在，则返回False；如果新建了边，则返回True。,"""执行UpsertEdge操作时，如果提供的参数存在于现有边，将更新边的属性；如果不存在，将插入新的边。"""
VAL-27,0.9530325384792538,ANTLR4支持生成Java、Python、C++、JavaScript、Go等10种目标语言的解析器。,ANTLR4支持生成多种目标语言的解析器，包括Java、C#、Python、JavaScript、Go、Swift、PHP、Rust等。
VAL-28,0.5264164710752748,抛出OutOfRange异常。,如果对DateTime对象添加超出其范围的微秒数，可能会导致日期时间溢出，具体行为可能依赖于实施的数据库系统。通常情况下，这种情况下可能会抛出异常。
VAL-29,0.8240619344837299,VertexLockGuard是一个机制，用于控制程序对点数据的访存权限。,"""VertexLockGuard是一个用于管理图中顶点锁定的工具，确保在对顶点进行操作时的线程安全，避免并发访问导致的数据错误。"""
VAL-30,0.5648393873082002,标记field是否为空,在 value pack 时，null array 表示数据结构中不存在任何元素，用于节省内存空间。
VAL-31,0.6132617812874741,可以写where语句进行过滤,“TuGraph目前不支持在MATCH语句中过滤边的属性。”
VAL-32,0.7362071977880084,点类型通过调用 `db.createVertexLabelByJson` 创建，边类型通过 `db.createEdgeLabelByJson` 创建。,"TuGraph通过以下语句定义点类型和边类型：
- 创建点模型示例：
```
CALL db.createVertexLabel('food', 'id', 'id', int64, false, 'name', string, true,'pointTest',point,true)
```
- 创建边类型模型的语句与点模型相似，使用`db.createEdgeLabel`。具体的语法同样适用于创建边。

插入数据示例：
- 插入点数据：
```
CREATE (n:food {id:10001, name: 'aco Bell',pointTest:point(3.0,4.0,7203)}) RETURN n
```

根据需求，使用类似的语句定义和插入其他类型数据（如Linestring和Polygon）。"
VAL-33,0.7447358668518993,"是的，如果指定log_dir为""""，再以后台运行方式启动server，就不会生成log了。如开debug了确实会频繁刷日志。日志是滚动生成的，超过256M就会生成一个新的日志文件，之前的日志文件就可以删了，可以手动清理。",如果不设置`log_dir`，日志信息将不会保存为文件，而是输出至控制台（console）。
VAL-34,0.5927735153258353,"MATCH (n1 {name:'Hugo Weaving'}),(n2 {title:'The Matrix'}) CALL algo.shortestPath(n1,n2) YIELD nodeCount,totalCost RETURN nodeCount,totalCost",实际应用中，调用算法 `algo.shortestPath` 的例子包括：网络路由优化、GPS导航系统中寻找最短路径、社交网络中用户之间最短交互路径的计算等。
VAL-35,0.5465959002315005,The label.,"""方法 GetLabel() 返回的是数据列定义表，类型是一个词典。"""
VAL-36,0.6339727089116797,目前仅支持v1版本。,Rust 存储过程目前支持的版本是 0.4.0。
VAL-37,0.8827251155244648,TuGraph单元测试采用gtest框架。,"""TuGraph单元测试使用的测试框架是Google Test。"""
VAL-38,0.6458119634197953,是的，需要指定。,创建 Label 的请求需要指定该 Label 为边（relationship），而不需要指定为点（vertex）。
VAL-39,0.6151141982355519,简单图分析操作和复杂图分析操作。,"""TuGraph 中使用的两种主要图分析操作是：PageRank 和 LPA（标签传播算法）。"""
VAL-40,0.7249199567936192,"首先在需要添加埋点的代码文件中增加#include ""tools/lgraph_log.h""，之后使用LOG_DEBUG()、LOG_INFO()、LOG_WARN()、LOG_ERROR()、LOG_FATAL()等日志宏输出对应等级的，具体使用方法参考test/test_lgraph_log.cpp测试文件","在TuGraph-DB中，可以通过在存储过程中使用日志输出函数来增加日志输出埋点。具体实现步骤如下：

1. 在存储过程中调用日志输出函数（如`log_info`、`log_error`等）。
2. 确保在代码中适当位置（如关键操作前后）添加日志语句。
3. 使用RPC请求对存储过程进行增删改查操作，确保日志能够记录相关信息。 

这样可以帮助用户跟踪存储过程的执行情况和数据变化。"
VAL-41,0.608782516866604,InputError。,"""会抛出`LabelNotFoundException`或`FieldNotFoundException`异常。"""
VAL-42,0.928975100865632,Grafana主要用于服务性能指标的监控和可视化。,Grafana主要用于监控和可视化数据。
VAL-43,0.5646240131950588,执行用户定义的程序。,DeleteProcedure 函数是用来删除存储过程的操作。
VAL-44,0.43831754036889087,"如果 src_vid < dst_vid, 关键是 (index field value + src_vid + dst_vid); 如果 src_vid > dst_vid, 关键是 (index field value + dst_vid + src_vid)。","""PairUniqueIndex 的钥匙生成形式是由两个不同属性组成的唯一索引。"""
VAL-45,0.7803420323480263,FieldData用于表示布尔、整型、浮点数、双精度浮点数、字符串、日期、时间、点、线串、多边形、空间数据、浮点向量以及BLOB数据。,"""类FieldData用于表示TuGraph支持的各种数据类型，包括BOOL、整数（INT8、INT16、INT32、INT64）、日期（DATE、DATETIME）、浮点数（FLOAT、DOUBLE）、字符串（STRING）、二进制数据（BLOB），以及地理空间数据（POINT、LINESTRING、POLYGON）和动态向量（FLOAT_VECTOR）。"""
VAL-46,0.8215785342561197,默认行为是在第一个错误包处停止导入。,"""默认行为是忽略数据包错误，并继续导入其他数据。"""
VAL-47,0.8353908300672119,ORDER BY是GQL子句的一部分，用于对查询结果进行排序。,"""ORDER BY在GQL中用于对查询结果进行排序，可以指定升序（ASC）或降序（DESC）。"""
VAL-48,0.7799448870427538,TuGraph-DB有2套http的接口，分别在src/restful/server/rest_server.cpp和src/http/http_server.cpp,是的，TuGraph-DB具有HTTP接口。具体的接口代码可以在TuGraph的官方文档或其GitHub仓库中找到。
VAL-49,0.7876291328016076,是的，后面我们会加入rpm中，目前编译部署后可以使用lgraph_peer,“是的，lgraph_peer工具需要通过编译方式部署后才能使用。”
VAL-50,0.4246556742689477,25%,无法提供当前图数据库应用程序使用的CPU比率。
